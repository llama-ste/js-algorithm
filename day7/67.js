// 문제67 : 민규의 악수

// 광장에서 모인 사람들과 악수를 하는 행사가 열렸습니다.
// 참가자인 민규는 몇명의 사람들과 악수를 한 후 중간에 일이 생겨 집으로 갔습니다.

// 이 행사에서 진행된 악수는 총 n번이라고 했을 때,
// 민규는 몇 번의 악수를 하고 집으로 돌아갔을까요?
// 그리고 민규를 포함한 행사 참가자는 몇 명일까요?

// - 악수는 모두 1대 1로 진행이 됩니다.
// - 민규를 제외한 모든 참가자는 자신을 제외한 참가자와 모두 한번씩 악수를 합니다.
// - 같은 상대와 중복된 악수는 카운트 하지 않습니다.
// - 민규를 제외한 참가자는 행사를 모두 마쳤습니다.

// 예를들어 행사에서 59회의 악수가 진행되었다면 민규는 4번의 악수를 하였고 민규를 포함한 참가자는 12명이다.

// 행사에서 진행된 악수 횟수(n)를 입력으로 받으면 민규의 악수 횟수와 행사 참가자 수가 출력됩니다.

function handshake(total) {
  let res = 0;
  let people = 0;
  for (let i = 1; i < total; i++) {
    res += i;
    // 현재 악수 결과가 입력받은 수보다 많아지는 시점일때, 원하는 결과를 출력할 수 있다.
    if (total <= res) {
      // 현재 결과에서 마지막 악수 결과를 빼고 저장해준다.
      res -= i;
      // 악수를 할때 자시 자신은 포함하지 않기 때문에 +1을 하여야 총 사람수가 나온다.
      people = i + 1;
      break;
    }
  }
  // 입력받은 악수에서 결과물의 악수를 빼면 몇번 악수를하고 끝냈는지 계산할 수 있다.
  const myShake = total - res;

  return [myShake, people];
}

// 100 => 15명이 악수를 끝냈을때 105번이 나오고, 14명이 악수를 했다는 가정하에 91번이나온다.
// 91번 보다는 많기때문에 15명이 악수를 하였는데 100 - 91로 9번 악수를 하고 집간것을 알 수 있다.

console.log(handshake(100));

let r = 0;
for (let j = 1; j < 15; j++) {
  r += j;
}

console.log(r);
